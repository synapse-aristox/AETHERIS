import configparser
import os
from aetheris.lib.utils import ensure_directory, aetheris_logger as logger

def create_default_config(config_path):
    """
    Crea un archivo de configuración por defecto si no existe.
    
    Args:
        config_path (str): Ruta donde guardar el archivo aetheris.conf
    
    Returns:
        configparser.ConfigParser: Objeto de configuración con valores por defecto.
    """
    config = configparser.ConfigParser()
    config['GLOBAL'] = {
        'results_directory': 'resultados',
        'cve_database_path': 'cve_data/cves_actuales.txt',
        'log_level': 'INFO',  # Puede ser: DEBUG, INFO, WARNING, ERROR, CRITICAL
        'log_file_path': 'aetheris.log'
    }
    config['NMAP'] = {
        'default_scan_options': '-sV -O -Pn --max-retries 2 --host-timeout 30m'
    }

    try:
        ensure_directory(os.path.dirname(config_path))
        with open(config_path, 'w', encoding='utf-8') as configfile:
            config.write(configfile)
        logger.info(f"Archivo de configuración por defecto creado en '{config_path}'")
        return config
    except Exception as e:
        logger.error(f"❌ Error al crear el archivo de configuración por defecto: {e}")
        return configparser.ConfigParser()  # Devuelve uno vacío para evitar errores posteriores
